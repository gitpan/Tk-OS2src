--- ././fix_4_os2.pl~	Fri Jun 26 09:57:40 1998
+++ ././fix_4_os2.pl	Mon Sep 28 23:30:50 1998
@@ -23,23 +23,36 @@ if you want to specify architecture expl
 EOP
   }
   if ($win_arch ne 'x' and not -r 'pTk/mTk/open32/tkWinOS2.c' ) {
-    my @zips = <../Tk-OS2-*/perltk_os2_common.zip>;
+    print <<EOD;
+
+Cannot find pTk/mTk/open32/tkWinOS2.c, trying to find Tk-OS2src nearby...
+
+EOD
+    my @zips = <../Tk-OS2src-*/perltk_os2_common.zip>;
     
     die <<EOD unless @zips;
 
-Cannot find pTk/mTk/open32/tkWinOS2.c, did you read README.os2?
+Cannot find ../Tk-OS2src-*/perltk_os2_common.zip, did you read README.os2?
 
 EOD
+    print 'Extracting OS/2-related files...\nunzip', $zips[-1], "\n";
     system 'unzip', $zips[-1] and die "Unzip: $!";
+    print "Extracted...\n";
   }
   if ($win_arch eq 'pm' and not -r 'pTk/mTk/os2/tkOS2Int.h') {
-    my @zips = <../Tk-OS2-*/perltk_os2_pm.zip>;
+    print <<EOD unless @zips;
+
+Cannot find pTk/mTk/os2/tkOS2Int.h, trying to find Tk-OS2src nearby...
+
+EOD
+    my @zips = <../Tk-OS2src-*/perltk_os2_pm.zip>;
     
     die <<EOD unless @zips;
 
-Cannot find pTk/mTk/os2/tkOS2Int.h, did you read README.os2?
+Cannot find ../Tk-OS2src-*/perltk_os2_pm.zip, did you read README.os2?
 
 EOD
+    print 'Extracting OS/2-related files...\nunzip', $zips[-1], "\n";
     system 'unzip', $zips[-1] and die "Unzip: $!";
   }
   $test_perl = 'perl__.exe' if $win_arch ne 'x';
--- ././Makefile.PL~	Sun Aug 30 15:28:04 1998
+++ ././Makefile.PL	Mon Sep 28 23:29:58 1998
@@ -9,10 +9,9 @@ BEGIN 
 
   $win_arch = shift @ARGV if @ARGV and $ARGV[0] =~ /^(open32|pm|x|MSWin32)$/;
   require('fix_4_os2.pl'), OS2_massage() if $^O eq 'os2';
-  $win_arch = ($IsWin32) ? $^O : 'x'
-    if not defined $win_arch; # Currently 'x', 'pm', 'open32', 'MSWin32'
 
-  $win_arch = ($IsWin32) ? 'MSWin32' : 'x';		# Currently 'x' and 'open32' supported
+  $win_arch = ($IsWin32) ? 'MSWin32' : 'x'
+    if not defined $win_arch; # Currently 'x', 'pm', 'open32', 'MSWin32'
 
   require "./myConfig";
   use lib ($Tk::MMutil::dir=getcwd);
